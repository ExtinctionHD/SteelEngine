#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_GOOGLE_include_directive : require

#define SHADER_STAGE compute
#pragma shader_stage(compute)

#include "Common/Common.glsl"
#include "Compute/ThreadGroupTiling.glsl"

layout(constant_id = 0) const uint LOCAL_SIZE_X = 8;
layout(constant_id = 1) const uint LOCAL_SIZE_Y = 8;
layout(constant_id = 2) const uint LOCAL_SIZE_Z = 1;

layout(
    local_size_x_id = 0,
    local_size_y_id = 1,
    local_size_z_id = 2) in;

layout(set = 0, binding = 0, rgba8) uniform writeonly image2D renderTarget;

layout(set = 1, binding = 0, rgba16f) uniform readonly image2D normalsTexture;
layout(set = 1, binding = 1, rgba8) uniform readonly image2D baseColorTexture;
layout(set = 1, binding = 2, rgba8) uniform readonly image2D emissionTexture;
layout(set = 1, binding = 3, rgba8) uniform readonly image2D miscTexture;
layout(set = 1, binding = 4) uniform sampler2D depthTexture;

void main() 
{
    const uvec2 id = TiledGlobalInvocationID.xy;

    const vec3 N = imageLoad(normalsTexture, ivec2(id)).xyz;
    const vec3 albedo = ToLinear(imageLoad(baseColorTexture, ivec2(id)).rgb);
    const vec3 emission = ToLinear(imageLoad(emissionTexture, ivec2(id)).rgb);
    const vec3 misc = imageLoad(miscTexture, ivec2(id)).rgb;
    const float depth = texture(depthTexture, vec2(id)).r;

    imageStore(renderTarget, ivec2(id), vec4((N * 0.5 + 0.5) * albedo * misc * depth + emission, 1.0));
}