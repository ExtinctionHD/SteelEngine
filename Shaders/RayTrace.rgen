#version 460
#extension GL_NV_ray_tracing : require

struct Payload
{
    vec3 color;
};

layout(set = 0, binding = 0) uniform accelerationStructureNV tlas;
layout(set = 0, binding = 1, rgba32f) uniform image2D image;

layout(location = 0) rayPayloadNV Payload payload;

void main() 
{
    const vec2 uv = vec2(gl_LaunchIDNV.xy) / vec2(gl_LaunchSizeNV.xy);
    const vec2 xy = uv * 2.0f - 1.0f;

    const vec3 origin = vec3(xy, -1.0f);
    const vec3 direction = vec3(0.0f, 0.0f, 1.0f);

    const uint rayFlags = gl_RayFlagsOpaqueNV;
    const uint cullMask = 0xFF;

    float tMin = 0.001f;
    float tMax = 1000.0f;

    traceNV(tlas, rayFlags, cullMask, 0, 0, 0, origin, tMin, direction, tMax, 0);

    imageStore(image, ivec2(gl_LaunchIDNV.xy), vec4(payload.color, 1.0f));
}
